/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
}

ext{
    javaMainClass = 'application.App'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation group: 'org.hyperledger.fabric-chaincode-java', name: 'fabric-chaincode-shim', version: '2.+'
    implementation 'org.hyperledger.fabric:fabric-gateway-java:2.2.0'
    implementation group: 'org.json', name: 'json', version: '20180813'

    // // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    // implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    //Local dependency 
    // implementation files('/opt/tomcat/apache-tomcat-8.5.63/lib/servlet-api.jar')

    // https://mvnrepository.com/artifact/javax/javaee-api
    implementation group: 'javax', name: 'javaee-api', version: '7.0'
    // https://mvnrepository.com/artifact/org.glassfish.jersey.bundles/jaxrs-ri
    implementation group: 'org.glassfish.jersey.bundles', name: 'jaxrs-ri', version: '2.32'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'


}

application {
    // Define the main class for the application.
    mainClass = 'application.App'
}

task runApp(type: Exec){
    dependsOn build
    group = "Execution"
    description = "Run the main class with ExecTask"
    commandLine "java", "-classpath", sourceSets.main.runtimeClasspath.getAsPath(), javaMainClass
}
